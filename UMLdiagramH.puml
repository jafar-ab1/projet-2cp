@startuml HotelManagementSystem
skinparam class {
    BackgroundColor #DCD7C9
    BorderColor #2C3930
    ArrowColor #A27B5C
    FontColor #3F4F44
    FontSize 13
    HeaderBackgroundColor #A27B5C
    HeaderFontColor #DCD7C9
}

' ====== MAIN ENTITIES ======
class User {
    + fullName: String
    + email: String
    + password: String
    + mobileNumber: String
    + role: String <<Client,Admin>>
    --
    + register(): void
    + login(): boolean
    + updateProfile(): void
    + changePassword(): void
    + comparePassword(): boolean
}

class VerificationCode {
    + email: String
    + code: String
    + expiresAt: Date
    --
    + generateCode(): void
    + verifyCode(): boolean
    + isExpired(): boolean
}

class Branch {
    + name: String <<Alger,Annaba,Oran>>
    + location: String
    + email: String
    + phone: String
    --
    + addBranch(): void
    + updateBranchInfo(): void
    + getBranchDetails(): Branch
}

class Floor {
    + status: String <<Complété,À compléter>>
    + floorNumber: int
    --
    + addFloor(): void
    + updateFloorStatus(): void
    + listRooms(): Room[]
}

class Room {
    + type: String <<Standard,Deluxe,Suite>>
    + facilities: String[]
    + cleaningStatus: String <<Made up,Not made up>>
    + availabilityStatus: String <<Available,Occupied>>
    + roomNumber: String
    + floor: int
    + price: float
    --
    + addRoom(): void
    + updateRoomStatus(): void
    + getRoomDetails(): Room
    + calculatePrice(): float
}

class Tarif {
    + roomType: String <<Standard,Deluxe,Suite>>
    + price: float
    --
    + setRoomPrice(): void
    + getPriceByType(): float
    + applySeasonalDiscount(): void
}

class Reservation {
    + email: String
    + roomNumber: String[]
    + checkInDate: Date
    + checkOutDate: Date
    + roomType: String <<Standard,Deluxe,Suite>>
    + status: String <<Due in,Checked in,Due out,Checked out>>
    --
    + createReservation(): void
    + cancelReservation(): void
    + updateReservation(): void
    + checkAvailability(): boolean
    + calculateTotal(): float
}

class Payment {
    + status: String <<Pending,Completed,Failed>>
    + amount: float
    + paymentDate: Date
    + paymentMethod: String <<Credit_card,Paypal,Cash>>
    --
    + processPayment(): boolean
    + generateReceipt(): String
    + refundPayment(): boolean
}

' ====== OPERATIONS ======
class Maintenance {
    + roomNumber: String
    + issueDescription: String
    + email: String
    + status: String <<In-progress,Completed>>
    + resolutionDate: Date
    --
    + createMaintenanceRequest(): void
    + updateMaintenanceStatus(): void
    + assignTechnician(): void
    + completeRequest(): void
}

class Feedback {
    + email: String
    + roomNumber: String
    + comment: String
    + date: Date
    + rating: int
    --
    + submitFeedback(): void
    + calculateAverageRating(): float
    + getFeedbackByRoom(): Feedback[]
}

class Settings {
    + hotelName: String
    + totalRooms: int
    + contactEmail: String
    + contactPhone: String
    --
    + updateSettings(): void
    + getSystemConfig(): Settings
    + backupDatabase(): void
}

class Deal {
    + dealName: String
    + discount: float
    + validFrom: Date
    + validTo: Date
    --
    + createDeal(): void
    + applyDeal(): void
    + checkValidity(): boolean
}

' ====== RELATIONSHIPS ======
User "1" --> "0..*" VerificationCode : génère
Branch "1" --> "1..*" Floor : contient
Floor "1" --> "1..*" Room : possède
Room --> Tarif : référence
User "1" --> "0..*" Reservation : effectue
Room "1" --> "0..*" Reservation : assigné à
Reservation "1" --> "1" Payment : a
Reservation "0..*" --> "0..1" Deal : applique
Room "1" --> "0..*" Maintenance : nécessite
User "1" --> "0..*" Feedback : fournit
Reservation "1" --> "0..1" Feedback : a

note right of Reservation
  **Reservation Workflow**:
  1. Create reservation
  2. Assign room
  3. Process payment
  4. Check-in/out
end note

note bottom of User
  **User Roles**:
  - Admin: Full access
  - Client: Booking only
end note
@enduml